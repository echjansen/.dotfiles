# Read `man 5 sway` for a complete reference.

### Variables
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term foot
set $menu bemenu-run | xargs swaymsg exec --
set $wallpaper ~/.local/share/wallpaper.jpg
set $lock lock

# Default display config
output * {
    bg $wallpaper fill
}

# Builtin display of my laptop
# See .config/kanshi/config for advanced screen configuration
output "AU Optronics 0x142D Unknown" {
    mode 1920x1080
    scale 1.5
}

# Default keymap (builtin laptop keyboard)
input * {
    xkb_layout "us"
    repeat_delay 300
    repeat_rate 150
}

# External keyboard, find your own using 'swaymsg -t get_inputs | grep identifier'
input 13364:560:Keychron_Keychron_K3_Pro {
    xkb_layout "us"
}

mouse_warping container

# Special keys
bindsym XF86AudioRaiseVolume exec wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec $menu

# Lock the computer
bindsym $mod+l exec "$lock" --force

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+x exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Switch to workspace (qwerty keyboard)
bindsym $mod+1  workspace number 1
bindsym $mod+2     workspace number 2
bindsym $mod+3   workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5  workspace number 5
bindsym $mod+6     workspace number 6
bindsym $mod+7      workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9   workspace number 9
bindsym $mod+0     workspace number 10

# Move focused container to workspace (qwerty keyboard)
bindsym $mod+Shift+1  move container to workspace number 1
bindsym $mod+Shift+2     move container to workspace number 2
bindsym $mod+Shift+3   move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5  move container to workspace number 5
bindsym $mod+Shift+6     move container to workspace number 6
bindsym $mod+Shift+7      move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9  move container to workspace number 9
bindsym $mod+Shift+0     move container to workspace number 10

# Switch to workspace (french keyboard)
bindsym $mod+ampersand  workspace number 1
bindsym $mod+eacute     workspace number 2
bindsym $mod+quotedbl   workspace number 3
bindsym $mod+apostrophe workspace number 4
bindsym $mod+parenleft  workspace number 5
bindsym $mod+minus      workspace number 6
bindsym $mod+egrave     workspace number 7
bindsym $mod+underscore workspace number 8
bindsym $mod+ccedilla   workspace number 9
bindsym $mod+agrave     workspace number 10

# Move focused container to workspace (french keyboard)
bindsym $mod+Shift+ampersand  move container to workspace number 1
bindsym $mod+Shift+eacute     move container to workspace number 2
bindsym $mod+Shift+quotedbl   move container to workspace number 3
bindsym $mod+Shift+apostrophe move container to workspace number 4
bindsym $mod+Shift+parenleft  move container to workspace number 5
bindsym $mod+Shift+egrave     move container to workspace number 6
bindsym $mod+Shift+minus      move container to workspace number 7
bindsym $mod+Shift+underscore move container to workspace number 8
bindsym $mod+Shift+ccedilla  move container to workspace number 9
bindsym $mod+Shift+agrave     move container to workspace number 10

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+i layout stacking
bindsym $mod+o layout tabbed
bindsym $mod+p layout toggle split

# Make the current focus fullscreen
bindsym $mod+m fullscreen

# Take screenshot
bindsym Print exec grim -g "$(slurp)" - | wl-copy && notify-send --urgency low 'SCREENSHOT COPIED TO CLIPBOARD !'

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+s move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+s scratchpad show

# Resizing containers
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Gruvbox colors
set $text_color #fbf1c7
set $primary    #cc241d
set $background #282828
set $urgent     #fb4934

# Status bar
bar {
    position top
    tray_output none

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command "$XDG_BIN_HOME/status-bar" 2>"$XDG_STATE_HOME/status-bar-errors.log"

    colors {
        statusline $text_color
        background $background
        focused_workspace $primary $primary $text_color
        active_workspace $primary $primary $text_color
        urgent_workspace $urgent $urgent $text_color
        inactive_workspace $background $background $text_color
    }
}

# Graphical customization
title_align center
default_border pixel 1

# border - border around titlebar
# bg - titlebar background
# text - text on titlebar
# indicator - shown where new window will open
# child_border - border around the window
# class                 border      bg          text        indicator   child_border
client.focused          $primary    $primary    $text_color $primary    $primary
client.focused_inactive $background $background $text_color $background $background
client.unfocused        $background $background $text_color $background $background
client.urgent           $urgent     $urgent     $text_color $urgent     $urgent


# Lockscreen manager
exec swayidle -w timeout 300 "$lock" before-sleep "$lock --force"

# Mimic DWM
exec sway-stack-layout

# Monitors manager
exec kanshi

# Don't split into multiple exec statements !!
# The dbus-update command is already done in ~/.profile but sway also sets important variables that must be imported
exec "dbus-update-activation-environment --systemd --all; systemctl --user start sway-session.target;"
